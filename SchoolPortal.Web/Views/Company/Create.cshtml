@model SchoolPortal.Web.Models.Company.CreateCompanyViewModel

@{
    ViewData["Title"] = "Create Company";
}

<div class="card">
    <div class="card-header bg-primary text-white">
        <h4 class="mb-0">Create New Company</h4>
    </div>
    <div class="card-body">
        <form asp-action="Create" method="post" id="companyForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="CompanyName" class="form-label"></label>
                        <input asp-for="CompanyName" class="form-control" />
                        <span asp-validation-for="CompanyName" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Email" class="form-label"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Description" class="form-label"></label>
                <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Address" class="form-label"></label>
                <textarea asp-for="Address" class="form-control" rows="2"></textarea>
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>

            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="CountryId" class="form-label">Country</label>
                        <select asp-for="CountryId" asp-items="Model.Countries.Select(c => new SelectListItem { Value = c.Id.ToString(), Text = c.CountryName })" 
                                class="form-select" id="countryDropdown">
                            <option value="">-- Select Country --</option>
                        </select>
                        <span asp-validation-for="CountryId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="StateId" class="form-label">State</label>
                        <select asp-for="StateId" class="form-select" id="stateDropdown" disabled>
                            <option value="">-- Select State --</option>
                        </select>
                        <span asp-validation-for="StateId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="CityId" class="form-label">City</label>
                        <select asp-for="CityId" class="form-select" id="cityDropdown" disabled>
                            <option value="">-- Select City --</option>
                        </select>
                        <span asp-validation-for="CityId" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="ZipCode" class="form-label">Zip Code</label>
                        <input asp-for="ZipCode" class="form-control" />
                        <span asp-validation-for="ZipCode" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="JurisdictionArea" class="form-label">Jurisdiction Area</label>
                        <select asp-for="JurisdictionArea" class="form-select" id="judistrictionAreaDropdown" disabled>
                            <option value="">-- Select Jurisdiction Area --</option>
                        </select>
                        <span asp-validation-for="JurisdictionArea" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="EstablishmentYear" class="form-label">Establishment Year</label>
                        <input asp-for="EstablishmentYear" class="form-control" />
                        <span asp-validation-for="EstablishmentYear" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-check form-switch mt-4 pt-3">
                        <input class="form-check-input" type="checkbox" asp-for="IsActive" checked>
                        <label class="form-check-label" asp-for="IsActive"></label>
                    </div>
                </div>
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">Create</button>
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @Html.AntiForgeryToken()
    
    <script>
        $(document).ready(function() {
            // Country dropdown change event
            $('#countryDropdown').change(function() {
                var countryId = $(this).val();
                if (countryId) {
                    loadStates(countryId);
                } else {
                    $('#stateDropdown').empty().prop('disabled', true).append('<option value="">-- Select State --</option>');
                    $('#cityDropdown, #judistrictionAreaDropdown').empty().prop('disabled', true).append('<option value="">-- Select City --</option>');
                }
            });

            // State dropdown change event
            $('#stateDropdown').change(function() {
                var stateId = $(this).val();
                if (stateId) {
                    loadCities(stateId);
                } else {
                    $('#cityDropdown, #judistrictionAreaDropdown').empty().prop('disabled', true).append('<option value="">-- Select City --</option>');
                }
            });

            // Function to load states
            function loadStates(countryId) {
                var stateDropdown = $('#stateDropdown');
                var cityDropdown = $('#cityDropdown');
                
                // Reset and disable state and city dropdowns
                stateDropdown.empty().append($('<option>', {
                    value: '',
                    text: '-- Select State --'
                })).prop('disabled', true);
                
                cityDropdown.empty().append($('<option>', {
                    value: '',
                    text: '-- Select City --'
                })).prop('disabled', true);
                
                if (countryId) {
                    stateDropdown.prop('disabled', true);
                    
                    // Call MVC endpoint to get states (uses server-side session auth)
                    $.ajax({
                        url: '@Url.Action("GetStatesByCountry", "Company")',
                        type: 'GET',
                        data: { countryId: countryId },
                        success: function(data) {
                            if (data && data.length > 0) {
                                stateDropdown.prop('disabled', false);
                                
                                // Add states to dropdown
                                $.each(data, function(index, state) {
                                    var value = state.id || state.Id;
                                    var text = state.name || state.stateName || state.StateName;
                                    stateDropdown.append($('<option>', { value: value, text: text }));
                                });
                                
                                // If there's a previously selected state, try to select it
                                var selectedStateId = '@Model.StateId';
                                if (selectedStateId) {
                                    stateDropdown.val(selectedStateId);
                                    // Load cities for the selected state
                                    loadCities(selectedStateId);
                                }
                            } else {
                                stateDropdown.append($('<option>', {
                                    value: '',
                                    text: 'No states available'
                                }));
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('Error loading states:', { status, error, response: xhr.responseText });
                            
                            stateDropdown.append($('<option>', {
                                value: '',
                                text: 'Error loading states'
                            }));
                        },
                        complete: function() {
                            stateDropdown.prop('disabled', false);
                        }
                    });
                }
            }
                    
            // Function to load cities and jurisdiction areas
            function loadCities(stateId) {
                // Load cities
                $.get('@Url.Action("GetCitiesByState", "Company")', { stateId: stateId }, function(cities) {
                    var cityDropdown = $('#cityDropdown');
                    cityDropdown.empty().append('<option value="">-- Select City --</option>').prop('disabled', false);
                    
                    if (cities && cities.length > 0) {
                        $.each(cities, function() {
                            var id = this.Id || this.id;
                            var name = this.CityName || this.cityName;
                            cityDropdown.append($('<option></option>').val(id).text(name));
                        });
                    } else {
                        cityDropdown.append('<option value="">No cities found</option>');
                    }
                }).fail(function() {
                    alert('Error loading cities');
                });

                // Load jurisdiction areas
                $.get('@Url.Action("GetJurisdictionAreas", "Company")/' + stateId, function(areas) {
                var jurisdictionDropdown = $('#judistrictionAreaDropdown');
                jurisdictionDropdown.empty().append('<option value="">-- Select Jurisdiction Area --</option>').prop('disabled', false);

                if (areas && areas.length > 0) {
                    $.each(areas, function() {
                        var id = this.Id || this.id;
                        var name = this.CityName || this.cityName;
                        jurisdictionDropdown.append($('<option></option>').val(id).text(name));
                    });
                } else {
                    jurisdictionDropdown.append('<option value="">No jurisdiction areas found</option>');
                }
            }).fail(function(xhr, status, error) {
                console.error('Jurisdiction load failed', { status, error, response: xhr.responseText });
                alert('Error loading jurisdiction areas');
            });
            }

            // Ensure disabled selects are posted
            $('#companyForm').on('submit', function() {
                $('#stateDropdown, #cityDropdown, #judistrictionAreaDropdown').prop('disabled', false);
            });

            // Optional: auto-load states if a country is preselected (e.g., after validation errors)
            var initialCountry = $('#countryDropdown').val();
            if (initialCountry) {
                loadStates(initialCountry);
            }
        });
    </script>
}