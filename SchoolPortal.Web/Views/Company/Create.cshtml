@model SchoolPortal.Web.Models.Company.CreateCompanyViewModel

@{
    ViewData["Title"] = "Create Company";
}

<div class="card">
    <div class="card-header bg-primary text-white">
        <h4 class="mb-0">Create New Company</h4>
    </div>
    <div class="card-body">
        <form asp-action="Create" method="post" id="companyForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="CompanyName" class="form-label"></label>
                        <input asp-for="CompanyName" class="form-control" />
                        <span asp-validation-for="CompanyName" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Email" class="form-label"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Description" class="form-label"></label>
                <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Address" class="form-label"></label>
                <textarea asp-for="Address" class="form-control" rows="2"></textarea>
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>

            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="CountryId" class="form-label">Country</label>
                        <select asp-for="CountryId" asp-items="Model.Countries.Select(c => new SelectListItem { Value = c.Id.ToString(), Text = c.Name })" 
                                class="form-select" id="countryDropdown">
                            <option value="">-- Select Country --</option>
                        </select>
                        <span asp-validation-for="CountryId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="StateId" class="form-label">State</label>
                        <select asp-for="StateId" class="form-select" id="stateDropdown" disabled>
                            <option value="">-- Select State --</option>
                        </select>
                        <span asp-validation-for="StateId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="CityId" class="form-label">City</label>
                        <select asp-for="CityId" class="form-select" id="cityDropdown" disabled>
                            <option value="">-- Select City --</option>
                        </select>
                        <span asp-validation-for="CityId" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="ZipCode" class="form-label">Zip Code</label>
                        <input asp-for="ZipCode" class="form-control" />
                        <span asp-validation-for="ZipCode" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="JurisdictionArea" class="form-label">Jurisdiction Area</label>
                        <select asp-for="JurisdictionArea" class="form-select" id="judistrictionAreaDropdown" disabled>
                            <option value="">-- Select Jurisdiction Area --</option>
                        </select>
                        <span asp-validation-for="JurisdictionArea" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="EstablishmentYear" class="form-label">Establishment Year</label>
                        <input asp-for="EstablishmentYear" class="form-control" />
                        <span asp-validation-for="EstablishmentYear" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-check form-switch mt-4 pt-3">
                        <input class="form-check-input" type="checkbox" asp-for="IsActive" checked>
                        <label class="form-check-label" asp-for="IsActive"></label>
                    </div>
                </div>
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">Create</button>
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Country dropdown change event
            $('#countryDropdown').change(function() {
                var countryId = $(this).val();
                if (countryId) {
                    loadStates(countryId);
                } else {
                    $('#stateDropdown').empty().prop('disabled', true).append('<option value="">-- Select State --</option>');
                    $('#cityDropdown, #judistrictionAreaDropdown').empty().prop('disabled', true).append('<option value="">-- Select City --</option>');
                }
            });

            // State dropdown change event
            $('#stateDropdown').change(function() {
                var stateId = $(this).val();
                if (stateId) {
                    loadCities(stateId);
                } else {
                    $('#cityDropdown, #judistrictionAreaDropdown').empty().prop('disabled', true).append('<option value="">-- Select City --</option>');
                }
            });

            // Function to load states
            function loadStates(countryId) {
                $.get('/Company/GetStatesByCountry', { countryId: countryId }, function(data) {
                    var stateDropdown = $('#stateDropdown');
                    stateDropdown.empty().append('<option value="">-- Select State --</option>').prop('disabled', false);
                    
                    if (data && data.length > 0) {
                        $.each(data, function() {
                            stateDropdown.append($('<option></option>').val(this.id).text(this.name));
                        });
                    } else {
                        stateDropdown.append('<option value="">No states found</option>');
                    }
                }).fail(function() {
                    alert('Error loading states');
                });
            }

            // Function to load cities
            function loadCities(stateId) {
                $.get('/Company/GetCitiesByState', { stateId: stateId }, function(data) {
                    var cityDropdown = $('#cityDropdown');
                    var judistrictionDropdown = $('#judistrictionAreaDropdown');
                    
                    cityDropdown.empty().append('<option value="">-- Select City --</option>').prop('disabled', false);
                    judistrictionDropdown.empty().append('<option value="">-- Select Jurisdiction Area --</option>').prop('disabled', false);
                    
                    if (data && data.length > 0) {
                        $.each(data, function() {
                            cityDropdown.append($('<option></option>').val(this.id).text(this.name));
                            judistrictionDropdown.append($('<option></option>').val(this.id).text(this.name));
                        });
                    } else {
                        cityDropdown.append('<option value="">No cities found</option>');
                        judistrictionDropdown.append('<option value="">No jurisdiction areas found</option>');
                    }
                }).fail(function() {
                    alert('Error loading cities');
                });
            }

            // Initialize form validation
            $('#companyForm').validate({
                rules: {
                    CompanyName: {
                        required: true,
                        maxlength: 100
                    },
                    Email: {
                        email: true
                    },
                    CountryId: {
                        required: true
                    },
                    StateId: {
                        required: true
                    },
                    CityId: {
                        required: true
                    },
                    JurisdictionArea: {
                        required: true
                    }
                },
                messages: {
                    CompanyName: {
                        required: "Please enter company name",
                        maxlength: "Company name cannot exceed 100 characters"
                    },
                    Email: {
                        email: "Please enter a valid email address"
                    },
                    CountryId: {
                        required: "Please select a country"
                    },
                    StateId: {
                        required: "Please select a state"
                    },
                    CityId: {
                        required: "Please select a city"
                    },
                    JurisdictionArea: {
                        required: "Please select a jurisdiction area"
                    }
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        });
    </script>
}