@model SchoolPortal.Web.Models.Company.UpdateCompanyViewModel

@{
    ViewData["Title"] = "Edit Company";
}

<div class="card">
    <div class="card-header bg-primary text-white">
        <h4 class="mb-0">Edit Company</h4>
    </div>
    <div class="card-body">
        <form asp-action="Edit" method="post" id="companyForm">
            <input type="hidden" asp-for="Id" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="CompanyName" class="form-label"></label>
                        <input asp-for="CompanyName" class="form-control" />
                        <span asp-validation-for="CompanyName" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Email" class="form-label"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Description" class="form-label"></label>
                <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Address" class="form-label"></label>
                <textarea asp-for="Address" class="form-control" rows="2"></textarea>
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>

            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="CountryId" class="form-label">Country</label>
                        <select asp-for="CountryId" asp-items="Model.Countries.Select(c => new SelectListItem { 
                            Value = c.Id.ToString(), 
                            Text = c.Name,
                            Selected = c.Id == Model.CountryId
                        })" class="form-select" id="countryDropdown">
                            <option value="">-- Select Country --</option>
                        </select>
                        <span asp-validation-for="CountryId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="StateId" class="form-label">State</label>
                        <select asp-for="StateId" class="form-select" id="stateDropdown" 
                                asp-items="Model.States.Select(s => new SelectListItem { 
                                    Value = s.Id.ToString(), 
                                    Text = s.Name,
                                    Selected = s.Id == Model.StateId
                                })">
                            <option value="">-- Select State --</option>
                        </select>
                        <span asp-validation-for="StateId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="CityId" class="form-label">City</label>
                        <select asp-for="CityId" class="form-select" id="cityDropdown"
                                asp-items="Model.Cities.Select(c => new SelectListItem { 
                                    Value = c.Id.ToString(), 
                                    Text = c.Name,
                                    Selected = c.Id == Model.CityId
                                })">
                            <option value="">-- Select City --</option>
                        </select>
                        <span asp-validation-for="CityId" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="ZipCode" class="form-label">Zip Code</label>
                        <input asp-for="ZipCode" class="form-control" />
                        <span asp-validation-for="ZipCode" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="JudistrictionArea" class="form-label">Jurisdiction Area</label>
                        <select asp-for="JudistrictionArea" class="form-select" id="judistrictionAreaDropdown"
                                asp-items="Model.JudistrictionAreas.Select(j => new SelectListItem { 
                                    Value = j.Id.ToString(), 
                                    Text = j.Name,
                                    Selected = j.Id == Model.JudistrictionArea
                                })">
                            <option value="">-- Select Jurisdiction Area --</option>
                        </select>
                        <span asp-validation-for="JudistrictionArea" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="EstablishmentYear" class="form-label">Establishment Year</label>
                        <input asp-for="EstablishmentYear" class="form-control" />
                        <span asp-validation-for="EstablishmentYear" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Status" class="form-label">Status</label>
                        <select asp-for="Status" class="form-select">
                            <option value="">-- Select Status --</option>
                            <option value="Active" selected="@(Model.Status == "Active")">Active</option>
                            <option value="Inactive" selected="@(Model.Status == "Inactive")">Inactive</option>
                            <option value="Pending" selected="@(Model.Status == "Pending")">Pending</option>
                        </select>
                        <span asp-validation-for="Status" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="StatusMessage" class="form-label">Status Message</label>
                <textarea asp-for="StatusMessage" class="form-control" rows="2"></textarea>
                <span asp-validation-for="StatusMessage" class="text-danger"></span>
            </div>

            <div class="form-check form-switch mb-4">
                <input class="form-check-input" type="checkbox" asp-for="IsActive">
                <label class="form-check-label" asp-for="IsActive"></label>
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">Save Changes</button>
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Initialize dropdowns
            var countryId = '@Model.CountryId';
            var stateId = '@Model.StateId';
            var cityId = '@Model.CityId';
            var judistrictionAreaId = '@Model.JudistrictionArea';

            // Enable state dropdown if country is selected
            if (countryId) {
                $('#stateDropdown').prop('disabled', false);
            }

            // Enable city dropdown if state is selected
            if (stateId) {
                $('#cityDropdown, #judistrictionAreaDropdown').prop('disabled', false);
            }

            // Country dropdown change event
            $('#countryDropdown').change(function() {
                var newCountryId = $(this).val();
                if (newCountryId) {
                    loadStates(newCountryId);
                } else {
                    $('#stateDropdown').empty().prop('disabled', true).append('<option value="">-- Select State --</option>');
                    $('#cityDropdown, #judistrictionAreaDropdown').empty().prop('disabled', true).append('<option value="">-- Select City --</option>');
                }
            });

            // State dropdown change event
            $('#stateDropdown').change(function() {
                var newStateId = $(this).val();
                if (newStateId) {
                    loadCities(newStateId);
                } else {
                    $('#cityDropdown, #judistrictionAreaDropdown').empty().prop('disabled', true).append('<option value="">-- Select City --</option>');
                }
            });

            // Function to load states
            function loadStates(countryId) {
                $.get('/Company/GetStatesByCountry', { countryId: countryId }, function(data) {
                    var stateDropdown = $('#stateDropdown');
                    stateDropdown.empty().append('<option value="">-- Select State --</option>').prop('disabled', false);
                    
                    if (data && data.length > 0) {
                        $.each(data, function() {
                            stateDropdown.append($('<option></option>').val(this.id).text(this.stateName));
                        });
                        // Set the previously selected state if available
                        if (stateId) {
                            stateDropdown.val(stateId);
                            // Trigger change to load cities
                            stateDropdown.trigger('change');
                        }
                    } else {
                        stateDropdown.append('<option value="">No states found</option>');
                    }
                }).fail(function() {
                    alert('Error loading states');
                });
            }

            // Function to load cities
            function loadCities(stateId) {
                $.get('/Company/GetCitiesByState', { stateId: stateId }, function(data) {
                    var cityDropdown = $('#cityDropdown');
                    var judistrictionDropdown = $('#judistrictionAreaDropdown');
                    
                    cityDropdown.empty().append('<option value="">-- Select City --</option').prop('disabled', false);
                    judistrictionDropdown.empty().append('<option value="">-- Select Jurisdiction Area --</option>').prop('disabled', false);
                    
                    if (data && data.length > 0) {
                        $.each(data, function() {
                            cityDropdown.append($('<option></option>').val(this.id).text(this.cityName));
                            judistrictionDropdown.append($('<option></option>').val(this.id).text(this.cityName));
                        });
                        
                        // Set the previously selected city and jurisdiction area if available
                        if (cityId) {
                            cityDropdown.val(cityId);
                        }
                        if (judistrictionAreaId) {
                            judistrictionDropdown.val(judistrictionAreaId);
                        }
                    } else {
                        cityDropdown.append('<option value="">No cities found</option>');
                        judistrictionDropdown.append('<option value="">No jurisdiction areas found</option>');
                    }
                }).fail(function() {
                    alert('Error loading cities');
                });
            }
        });
    </script>
}